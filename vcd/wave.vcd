$date
	Fri Jun 25 09:13:41 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test_bench $end
$var reg 1 ! clk $end
$scope module duv $end
$var wire 1 ! clk $end
$var wire 1 " z_flag $end
$var wire 28 # out_shift_jump [27:0] $end
$var wire 32 $ out_shift [31:0] $end
$var wire 5 % out_mux_wb [4:0] $end
$var wire 32 & out_adder2 [31:0] $end
$var wire 32 ' outPC [31:0] $end
$var wire 32 ( outMuxJump [31:0] $end
$var wire 32 ) outMux0 [31:0] $end
$var wire 32 * outInsMem [31:0] $end
$var wire 2 + outB_WB3 [1:0] $end
$var wire 2 , outB_WB2 [1:0] $end
$var wire 2 - outB_WB1 [1:0] $end
$var wire 4 . outB_M2 [3:0] $end
$var wire 4 / outB_M1 [3:0] $end
$var wire 5 0 outB_EX1 [4:0] $end
$var wire 32 1 mux_alu [31:0] $end
$var wire 32 2 mem_out [31:0] $end
$var wire 32 3 inMuxB [31:0] $end
$var wire 32 4 inMuxA [31:0] $end
$var wire 32 5 final_WriteData [31:0] $end
$var wire 32 6 ext [31:0] $end
$var wire 32 7 alu_out [31:0] $end
$var wire 3 8 alu_c [2:0] $end
$var wire 1 9 RegWrite $end
$var wire 1 : RegDst $end
$var wire 32 ; RD2 [31:0] $end
$var wire 32 < RD1 [31:0] $end
$var wire 1 = PCSrc $end
$var wire 1 > MemWrite $end
$var wire 1 ? MemToReg $end
$var wire 1 @ MemRead $end
$var wire 1 A Jump $end
$var wire 5 B F1 [4:0] $end
$var wire 5 C E2 [4:0] $end
$var wire 5 D E1 [4:0] $end
$var wire 32 E D2 [31:0] $end
$var wire 32 F D1 [31:0] $end
$var wire 5 G C3 [4:0] $end
$var wire 32 H C2 [31:0] $end
$var wire 32 I C1 [31:0] $end
$var wire 1 J Branch $end
$var wire 32 K B3 [31:0] $end
$var wire 1 L B2 $end
$var wire 32 M B1 [31:0] $end
$var wire 32 N B0 [31:0] $end
$var wire 1 O ALUSrc $end
$var wire 3 P ALUOp [2:0] $end
$var wire 32 Q A3 [31:0] $end
$var wire 32 R A1 [31:0] $end
$var wire 32 S A0 [31:0] $end
$scope module a_control $end
$var wire 3 T ALUOP [2:0] $end
$var wire 6 U FUNCTION [5:0] $end
$var reg 3 V OP [2:0] $end
$upscope $end
$scope module adder_ins $end
$var wire 32 W B [31:0] $end
$var wire 32 X R [31:0] $end
$var wire 32 Y A [31:0] $end
$upscope $end
$scope module and_branch $end
$var wire 1 Z A $end
$var wire 1 = R $end
$var wire 1 L B $end
$upscope $end
$scope module b0 $end
$var wire 1 ! clk $end
$var wire 32 [ inAdd [31:0] $end
$var wire 32 \ inInsMem [31:0] $end
$var reg 32 ] outAdd [31:0] $end
$var reg 32 ^ outInsMem [31:0] $end
$upscope $end
$scope module b1 $end
$var wire 1 ! clk $end
$var wire 32 _ inAdder [31:0] $end
$var wire 5 ` inInsA [4:0] $end
$var wire 5 a inInsB [4:0] $end
$var wire 32 b inSignExt [31:0] $end
$var wire 32 c inRD2 [31:0] $end
$var wire 32 d inRD1 [31:0] $end
$var reg 32 e outAdder [31:0] $end
$var reg 5 f outInsA [4:0] $end
$var reg 5 g outInsB [4:0] $end
$var reg 32 h outRD1 [31:0] $end
$var reg 32 i outRD2 [31:0] $end
$var reg 32 j outSignExt [31:0] $end
$upscope $end
$scope module b2 $end
$var wire 1 ! clk $end
$var wire 32 k inRD2 [31:0] $end
$var wire 1 " inZf $end
$var wire 32 l inOutAlu [31:0] $end
$var wire 5 m inMux5b [4:0] $end
$var wire 32 n inAdder [31:0] $end
$var reg 32 o outAdder [31:0] $end
$var reg 5 p outMux5b [4:0] $end
$var reg 32 q outOutAlu [31:0] $end
$var reg 32 r outRD2 [31:0] $end
$var reg 1 L outZf $end
$upscope $end
$scope module b3 $end
$var wire 1 ! clk $end
$var wire 5 s inMux5b [4:0] $end
$var wire 32 t inOutAlu [31:0] $end
$var wire 32 u inReadData [31:0] $end
$var reg 5 v outMux5b [4:0] $end
$var reg 32 w outOutAlu [31:0] $end
$var reg 32 x outReadData [31:0] $end
$upscope $end
$scope module b_ex1 $end
$var wire 1 ! clk $end
$var wire 5 y in [4:0] $end
$var reg 5 z out [4:0] $end
$upscope $end
$scope module b_m1 $end
$var wire 1 ! clk $end
$var wire 4 { in [3:0] $end
$var reg 4 | out [3:0] $end
$upscope $end
$scope module b_m2 $end
$var wire 1 ! clk $end
$var wire 4 } in [3:0] $end
$var reg 4 ~ out [3:0] $end
$upscope $end
$scope module b_wb1 $end
$var wire 1 ! clk $end
$var wire 2 !" in [1:0] $end
$var reg 2 "" out [1:0] $end
$upscope $end
$scope module b_wb2 $end
$var wire 1 ! clk $end
$var wire 2 #" in [1:0] $end
$var reg 2 $" out [1:0] $end
$upscope $end
$scope module b_wb3 $end
$var wire 1 ! clk $end
$var wire 2 %" in [1:0] $end
$var reg 2 &" out [1:0] $end
$upscope $end
$scope module bank $end
$var wire 5 '" AR1 [4:0] $end
$var wire 5 (" AR2 [4:0] $end
$var wire 5 )" AW [4:0] $end
$var wire 1 *" REG_WRITE $end
$var wire 32 +" DIN [31:0] $end
$var reg 32 ," DR1 [31:0] $end
$var reg 32 -" DR2 [31:0] $end
$upscope $end
$scope module extensor $end
$var wire 16 ." IN [15:0] $end
$var wire 32 /" OUT [31:0] $end
$upscope $end
$scope module instructions $end
$var wire 32 0" INS [31:0] $end
$var wire 32 1" ADDR [31:0] $end
$upscope $end
$scope module memory $end
$var wire 32 2" ADDR [31:0] $end
$var wire 32 3" DIN [31:0] $end
$var wire 1 4" en_R $end
$var wire 1 5" en_W $end
$var reg 32 6" R [31:0] $end
$upscope $end
$scope module mux0 $end
$var wire 32 7" A [31:0] $end
$var wire 32 8" B [31:0] $end
$var wire 1 = SEL $end
$var reg 32 9" R [31:0] $end
$upscope $end
$scope module muxJump $end
$var wire 32 :" A [31:0] $end
$var wire 32 ;" B [31:0] $end
$var wire 1 <" SEL $end
$var reg 32 =" R [31:0] $end
$upscope $end
$scope module pcontrol $end
$var wire 32 >" INS [31:0] $end
$var wire 1 ! clk $end
$var reg 32 ?" INS_OUT [31:0] $end
$upscope $end
$scope module post_memory $end
$var wire 32 @" A [31:0] $end
$var wire 32 A" B [31:0] $end
$var wire 1 B" SEL $end
$var reg 32 C" R [31:0] $end
$upscope $end
$scope module post_shift $end
$var wire 32 D" A [31:0] $end
$var wire 32 E" R [31:0] $end
$var wire 32 F" B [31:0] $end
$upscope $end
$scope module pre_alu $end
$var wire 32 G" A [31:0] $end
$var wire 32 H" B [31:0] $end
$var wire 1 I" SEL $end
$var reg 32 J" R [31:0] $end
$upscope $end
$scope module s_left $end
$var wire 32 K" IN [31:0] $end
$var wire 32 L" OUT [31:0] $end
$upscope $end
$scope module slJump $end
$var wire 26 M" in [25:0] $end
$var wire 28 N" out [27:0] $end
$upscope $end
$scope module super $end
$var wire 6 O" OPCODE [5:0] $end
$var reg 3 P" ALUOp [2:0] $end
$var reg 1 O ALUSrc $end
$var reg 1 J Branch $end
$var reg 1 A Jump $end
$var reg 1 @ MemRead $end
$var reg 1 ? MemToReg $end
$var reg 1 > MemWrite $end
$var reg 1 : RegDst $end
$var reg 1 9 RegWrite $end
$upscope $end
$scope module super_alu $end
$var wire 32 Q" A [31:0] $end
$var wire 32 R" B [31:0] $end
$var wire 3 S" SEL [2:0] $end
$var reg 32 T" R [31:0] $end
$var reg 1 " ZF $end
$upscope $end
$scope module write_back $end
$var wire 5 U" A [4:0] $end
$var wire 5 V" B [4:0] $end
$var wire 1 W" SEL $end
$var reg 5 X" R [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx X"
xW"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx00 N"
bx M"
bx00 L"
bx K"
bx J"
xI"
bx H"
bx G"
bx00 F"
bx E"
bx D"
bx C"
xB"
bx A"
bx @"
bx ?"
bx >"
bx ="
x<"
bx00xxxx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
x5"
x4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
x*"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
xZ
bx Y
bx X
b100 W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
xO
bx N
bx M
xL
bx K
xJ
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
xA
x@
x?
x>
x=
bx <
bx ;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx00 $
bx00 #
x"
0!
$end
#100
b1000000001010011100100 #
b1000000001010011100100 N"
b10000000010100111001 M"
b10000000010100111001000100 ;"
b100000000010000000010100111001 *
b100000000010000000010100111001 \
b100000000010000000010100111001 0"
b100 4
b100 X
b100 [
b100 7"
b0 '
b0 Y
b0 1"
b0 ?"
1!
#250
0!
#350
b1000 ;
b1000 c
b1000 -"
b0 <
b0 d
b0 ,"
0A
19
1O
0>
b11 P
b11 P"
b10 !"
0?
0@
b0 {
0J
b111 y
0:
b0 a
b1000 `
b10100111001 6
b10100111001 b
b10100111001 /"
b10100111001 ."
b1000 ("
b0 '"
b1000 O"
b100000000010000000010100111001 N
b100000000010000000010100111001 ^
b100 S
b100 ]
b100 _
1!
#500
0!
#600
0"
b10100111001 7
b10100111001 l
b10100111001 T"
b1000 %
b1000 m
b1000 X"
b10100111001 1
b10100111001 J"
b10100111001 R"
b0 8
b0 V
b0 S"
0W"
b11 T
1I"
b1010011101000 &
b1010011101000 n
b1010011101000 E"
b1010011100100 $
b1010011100100 F"
b1010011100100 L"
b111001 U
b10 -
b10 ""
b10 #"
b0 /
b0 |
b0 }
b111 0
b111 z
b0 B
b0 g
b0 V"
b1000 D
b1000 f
b1000 U"
b10100111001 F
b10100111001 j
b10100111001 H"
b10100111001 K"
b1000 I
b1000 i
b1000 k
b1000 G"
b0 M
b0 h
b0 Q"
b100 R
b100 e
b100 D"
1!
#750
0!
#850
b100 (
b100 ="
b100 >"
b100 )
b100 9"
b100 :"
b10100111001 5
b10100111001 +"
b10100111001 C"
0B"
1*"
0=
04"
05"
0Z
0<"
b1000 G
b1000 v
b1000 )"
b10100111001 K
b10100111001 w
b10100111001 @"
b10 +
b10 &"
b1000 C
b1000 p
b1000 s
b1000 E
b1000 r
b1000 3"
b10100111001 H
b10100111001 q
b10100111001 t
b10100111001 2"
0L
b1010011101000 3
b1010011101000 o
b1010011101000 8"
b0 .
b0 ~
b10 ,
b10 $"
b10 %"
1!
#1000
0!
#1100
b0 #
b0 N"
b1000 (
b1000 ="
b1000 >"
b0 M"
b1000 ;"
b1000 )
b1000 9"
b1000 :"
b0 *
b0 \
b0 0"
b1000 4
b1000 X
b1000 [
b1000 7"
b100 '
b100 Y
b100 1"
b100 ?"
1!
#1250
0!
#1350
b0 ;
b0 c
b0 -"
0O
b10 P
b10 P"
b10100 y
1:
b0 `
b0 6
b0 b
b0 /"
b0 ."
b0 ("
b0 O"
b0 N
b0 ^
b1100 S
b1100 ]
b1100 _
b1100 (
b1100 ="
b1100 >"
b1100 ;"
b1100 )
b1100 9"
b1100 :"
b1100 4
b1100 X
b1100 [
b1100 7"
b1000 '
b1000 Y
b1000 1"
b1000 ?"
1!
#1500
0!
#1600
1"
b10000 (
b10000 ="
b10000 >"
b111 8
b111 V
b111 S"
b0 7
b0 l
b0 T"
b0 ;"
b10000 )
b10000 9"
b10000 :"
1W"
b10 T
0I"
b0 %
b0 m
b0 X"
b0 $
b0 F"
b0 L"
b0 U
b0 1
b0 J"
b0 R"
b10000 4
b10000 X
b10000 [
b10000 7"
b1100 '
b1100 Y
b1100 1"
b1100 ?"
b10100 0
b10100 z
b0 D
b0 f
b0 U"
b0 F
b0 j
b0 H"
b0 K"
b0 I
b0 i
b0 k
b0 G"
b1100 &
b1100 n
b1100 E"
b1100 R
b1100 e
b1100 D"
1!
#1750
0!
#1850
b10100111001 ;
b10100111001 c
b10100111001 -"
b10100111001 <
b10100111001 d
b10100111001 ,"
1O
b11 P
b11 P"
b111 y
0:
b11111 a
b1000 `
b11111111111111111111110100101100 6
b11111111111111111111110100101100 b
b11111111111111111111110100101100 /"
b1111110100101100 ."
b1000 ("
b1000 '"
b1000 O"
b100001000010001111110100101100 N
b100001000010001111110100101100 ^
b10100 S
b10100 ]
b10100 _
b100001000111111010010110000 #
b100001000111111010010110000 N"
b10100 (
b10100 ="
b10100 >"
b0 5
b0 +"
b0 C"
b1000010001111110100101100 M"
b1000010001111110100101100000100 ;"
b10100 )
b10100 9"
b10100 :"
b0 G
b0 v
b0 )"
b0 K
b0 w
b0 @"
b0 C
b0 p
b0 s
b0 E
b0 r
b0 3"
b0 H
b0 q
b0 t
b0 2"
1L
b1100 3
b1100 o
b1100 8"
b100001000010001111110100101100 *
b100001000010001111110100101100 \
b100001000010001111110100101100 0"
b10100 4
b10100 X
b10100 [
b10100 7"
b10000 '
b10000 Y
b10000 1"
b10000 ?"
1!
#2000
0!
#2100
0"
b0 #
b0 N"
b11000 (
b11000 ="
b11000 >"
b0 8
b0 V
b0 S"
b1001100101 7
b1001100101 l
b1001100101 T"
b0 M"
b1000 ;"
b11000 )
b11000 9"
b11000 :"
0W"
b11 T
1I"
b1000 %
b1000 m
b1000 X"
b11111111111111111111010010110000 $
b11111111111111111111010010110000 F"
b11111111111111111111010010110000 L"
b101100 U
b11111111111111111111110100101100 1
b11111111111111111111110100101100 J"
b11111111111111111111110100101100 R"
b0 *
b0 \
b0 0"
b11000 4
b11000 X
b11000 [
b11000 7"
b10100 '
b10100 Y
b10100 1"
b10100 ?"
b111 0
b111 z
b11111 B
b11111 g
b11111 V"
b1000 D
b1000 f
b1000 U"
b11111111111111111111110100101100 F
b11111111111111111111110100101100 j
b11111111111111111111110100101100 H"
b11111111111111111111110100101100 K"
b10100111001 I
b10100111001 i
b10100111001 k
b10100111001 G"
b10100111001 M
b10100111001 h
b10100111001 Q"
b11111111111111111111010011000100 &
b11111111111111111111010011000100 n
b11111111111111111111010011000100 E"
b10100 R
b10100 e
b10100 D"
1!
#2250
0!
#2350
b0 ;
b0 c
b0 -"
b0 <
b0 d
b0 ,"
1A
x9
xO
x>
bx P
bx P"
bx !"
x?
b10xx {
x@
bx y
x:
b0 a
b0 `
b1010 6
b1010 b
b1010 /"
b1010 ."
b0 ("
b0 '"
b10 O"
b1000000000000000000000001010 N
b1000000000000000000000001010 ^
b11100 S
b11100 ]
b11100 _
b101000 #
b101000 N"
b11100 (
b11100 ="
b11100 >"
b1001100101 5
b1001100101 +"
b1001100101 C"
b1010 M"
b1010001100 ;"
b11100 )
b11100 9"
b11100 :"
b1000 G
b1000 v
b1000 )"
b1001100101 K
b1001100101 w
b1001100101 @"
b1000 C
b1000 p
b1000 s
b10100111001 E
b10100111001 r
b10100111001 3"
b1001100101 H
b1001100101 q
b1001100101 t
b1001100101 2"
0L
b11111111111111111111010011000100 3
b11111111111111111111010011000100 o
b11111111111111111111010011000100 8"
b1000000000000000000000001010 *
b1000000000000000000000001010 \
b1000000000000000000000001010 0"
b11100 4
b11100 X
b11100 [
b11100 7"
b11000 '
b11000 Y
b11000 1"
b11000 ?"
1!
#2500
0!
#2600
b0 #
b0 N"
b100000 (
b100000 ="
b100000 >"
b0 M"
b0 ;"
b100000 )
b100000 9"
b100000 :"
xW"
bx T
xI"
b0 %
b0 m
b0 X"
b101000 $
b101000 F"
b101000 L"
b1010 U
b1010 1
b1010 J"
b1010 R"
b1010 7
b1010 l
b1010 T"
b0 *
b0 \
b0 0"
b100000 4
b100000 X
b100000 [
b100000 7"
b11100 '
b11100 Y
b11100 1"
b11100 ?"
bx -
bx ""
bx #"
b10xx /
b10xx |
b10xx }
bx 0
bx z
b0 B
b0 g
b0 V"
b0 D
b0 f
b0 U"
b1010 F
b1010 j
b1010 H"
b1010 K"
b0 I
b0 i
b0 k
b0 G"
b0 M
b0 h
b0 Q"
b1000100 &
b1000100 n
b1000100 E"
b11100 R
b11100 e
b11100 D"
1!
#2750
0!
#2850
0A
19
0O
0>
b10 P
b10 P"
b10 !"
0?
b0 {
0@
b10100 y
1:
b0 6
b0 b
b0 /"
b0 ."
b0 O"
b0 N
b0 ^
b100100 S
b100100 ]
b100100 _
b100 (
b100 ="
b100 >"
xB"
x*"
x4"
x5"
1<"
b100 ;"
b100100 )
b100100 9"
b100100 :"
b0 G
b0 v
b0 )"
b1010 K
b1010 w
b1010 @"
bx +
bx &"
b0 C
b0 p
b0 s
b0 E
b0 r
b0 3"
b1010 H
b1010 q
b1010 t
b1010 2"
b1000100 3
b1000100 o
b1000100 8"
b10xx .
b10xx ~
bx ,
bx $"
bx %"
b100100 4
b100100 X
b100100 [
b100100 7"
b100000 '
b100000 Y
b100000 1"
b100000 ?"
1!
#3000
0!
#3100
1"
b0 7
b0 l
b0 T"
b1000 (
b1000 ="
b1000 >"
b0 1
b0 J"
b0 R"
b111 8
b111 V
b111 S"
b1000 ;"
b1000 )
b1000 9"
b1000 :"
1W"
b10 T
0I"
b0 $
b0 F"
b0 L"
b0 U
b1000 4
b1000 X
b1000 [
b1000 7"
b100 '
b100 Y
b100 1"
b100 ?"
b10 -
b10 ""
b10 #"
b0 /
b0 |
b0 }
b10100 0
b10100 z
b0 F
b0 j
b0 H"
b0 K"
b100100 &
b100100 n
b100100 E"
b100100 R
b100100 e
b100100 D"
1!
#3250
0!
#3350
b1100 S
b1100 ]
b1100 _
b1100 (
b1100 ="
b1100 >"
b0 5
b0 +"
b0 C"
0B"
1*"
04"
05"
0<"
b1100 ;"
b1100 )
b1100 9"
b1100 :"
b0 K
b0 w
b0 @"
b10 +
b10 &"
b0 H
b0 q
b0 t
b0 2"
1L
b100100 3
b100100 o
b100100 8"
b0 .
b0 ~
b10 ,
b10 $"
b10 %"
b1100 4
b1100 X
b1100 [
b1100 7"
b1000 '
b1000 Y
b1000 1"
b1000 ?"
1!
#3500
0!
#3600
b10000 (
b10000 ="
b10000 >"
b0 ;"
b10000 )
b10000 9"
b10000 :"
b10000 4
b10000 X
b10000 [
b10000 7"
b1100 '
b1100 Y
b1100 1"
b1100 ?"
b1100 &
b1100 n
b1100 E"
b1100 R
b1100 e
b1100 D"
1!
#3750
0!
#3850
b1001100101 ;
b1001100101 c
b1001100101 -"
b1001100101 <
b1001100101 d
b1001100101 ,"
1O
b11 P
b11 P"
b111 y
0:
b11111 a
b1000 `
b11111111111111111111110100101100 6
b11111111111111111111110100101100 b
b11111111111111111111110100101100 /"
b1111110100101100 ."
b1000 ("
b1000 '"
b1000 O"
b100001000010001111110100101100 N
b100001000010001111110100101100 ^
b10100 S
b10100 ]
b10100 _
b100001000111111010010110000 #
b100001000111111010010110000 N"
b10100 (
b10100 ="
b10100 >"
b1000010001111110100101100 M"
b1000010001111110100101100000100 ;"
b10100 )
b10100 9"
b10100 :"
b1100 3
b1100 o
b1100 8"
b100001000010001111110100101100 *
b100001000010001111110100101100 \
b100001000010001111110100101100 0"
b10100 4
b10100 X
b10100 [
b10100 7"
b10000 '
b10000 Y
b10000 1"
b10000 ?"
1!
#4000
0!
#4100
0"
b0 #
b0 N"
b11000 (
b11000 ="
b11000 >"
b0 8
b0 V
b0 S"
b11111111111111111111111110010001 7
b11111111111111111111111110010001 l
b11111111111111111111111110010001 T"
b0 M"
b1000 ;"
b11000 )
b11000 9"
b11000 :"
0W"
b11 T
1I"
b1000 %
b1000 m
b1000 X"
b11111111111111111111010010110000 $
b11111111111111111111010010110000 F"
b11111111111111111111010010110000 L"
b101100 U
b11111111111111111111110100101100 1
b11111111111111111111110100101100 J"
b11111111111111111111110100101100 R"
b0 *
b0 \
b0 0"
b11000 4
b11000 X
b11000 [
b11000 7"
b10100 '
b10100 Y
b10100 1"
b10100 ?"
b111 0
b111 z
b11111 B
b11111 g
b11111 V"
b1000 D
b1000 f
b1000 U"
b11111111111111111111110100101100 F
b11111111111111111111110100101100 j
b11111111111111111111110100101100 H"
b11111111111111111111110100101100 K"
b1001100101 I
b1001100101 i
b1001100101 k
b1001100101 G"
b1001100101 M
b1001100101 h
b1001100101 Q"
b11111111111111111111010011000100 &
b11111111111111111111010011000100 n
b11111111111111111111010011000100 E"
b10100 R
b10100 e
b10100 D"
1!
#4250
0!
#4350
b0 ;
b0 c
b0 -"
b0 <
b0 d
b0 ,"
1A
x9
xO
x>
bx P
bx P"
bx !"
x?
b10xx {
x@
bx y
x:
b0 a
b0 `
b1010 6
b1010 b
b1010 /"
b1010 ."
b0 ("
b0 '"
b10 O"
b1000000000000000000000001010 N
b1000000000000000000000001010 ^
b11100 S
b11100 ]
b11100 _
b101000 #
b101000 N"
b11100 (
b11100 ="
b11100 >"
b11111111111111111111111110010001 5
b11111111111111111111111110010001 +"
b11111111111111111111111110010001 C"
b1010 M"
b1010001100 ;"
b11100 )
b11100 9"
b11100 :"
b1000 G
b1000 v
b1000 )"
b11111111111111111111111110010001 K
b11111111111111111111111110010001 w
b11111111111111111111111110010001 @"
b1000 C
b1000 p
b1000 s
b1001100101 E
b1001100101 r
b1001100101 3"
b11111111111111111111111110010001 H
b11111111111111111111111110010001 q
b11111111111111111111111110010001 t
b11111111111111111111111110010001 2"
0L
b11111111111111111111010011000100 3
b11111111111111111111010011000100 o
b11111111111111111111010011000100 8"
b1000000000000000000000001010 *
b1000000000000000000000001010 \
b1000000000000000000000001010 0"
b11100 4
b11100 X
b11100 [
b11100 7"
b11000 '
b11000 Y
b11000 1"
b11000 ?"
1!
#4500
0!
#4600
b0 #
b0 N"
b100000 (
b100000 ="
b100000 >"
b0 M"
b0 ;"
b100000 )
b100000 9"
b100000 :"
xW"
bx T
xI"
b0 %
b0 m
b0 X"
b101000 $
b101000 F"
b101000 L"
b1010 U
b1010 1
b1010 J"
b1010 R"
b1010 7
b1010 l
b1010 T"
b0 *
b0 \
b0 0"
b100000 4
b100000 X
b100000 [
b100000 7"
b11100 '
b11100 Y
b11100 1"
b11100 ?"
bx -
bx ""
bx #"
b10xx /
b10xx |
b10xx }
bx 0
bx z
b0 B
b0 g
b0 V"
b0 D
b0 f
b0 U"
b1010 F
b1010 j
b1010 H"
b1010 K"
b0 I
b0 i
b0 k
b0 G"
b0 M
b0 h
b0 Q"
b1000100 &
b1000100 n
b1000100 E"
b11100 R
b11100 e
b11100 D"
1!
#4750
0!
#4850
0A
19
0O
0>
b10 P
b10 P"
b10 !"
0?
b0 {
0@
b10100 y
1:
b0 6
b0 b
b0 /"
b0 ."
b0 O"
b0 N
b0 ^
b100100 S
b100100 ]
b100100 _
b100 (
b100 ="
b100 >"
xB"
x*"
x4"
x5"
1<"
b100 ;"
b100100 )
b100100 9"
b100100 :"
b0 G
b0 v
b0 )"
b1010 K
b1010 w
b1010 @"
bx +
bx &"
b0 C
b0 p
b0 s
b0 E
b0 r
b0 3"
b1010 H
b1010 q
b1010 t
b1010 2"
b1000100 3
b1000100 o
b1000100 8"
b10xx .
b10xx ~
bx ,
bx $"
bx %"
b100100 4
b100100 X
b100100 [
b100100 7"
b100000 '
b100000 Y
b100000 1"
b100000 ?"
1!
#5000
0!
#5100
1"
b0 7
b0 l
b0 T"
b1000 (
b1000 ="
b1000 >"
b0 1
b0 J"
b0 R"
b111 8
b111 V
b111 S"
b1000 ;"
b1000 )
b1000 9"
b1000 :"
1W"
b10 T
0I"
b0 $
b0 F"
b0 L"
b0 U
b1000 4
b1000 X
b1000 [
b1000 7"
b100 '
b100 Y
b100 1"
b100 ?"
b10 -
b10 ""
b10 #"
b0 /
b0 |
b0 }
b10100 0
b10100 z
b0 F
b0 j
b0 H"
b0 K"
b100100 &
b100100 n
b100100 E"
b100100 R
b100100 e
b100100 D"
1!
#5250
0!
#5350
b1100 S
b1100 ]
b1100 _
b1100 (
b1100 ="
b1100 >"
b0 5
b0 +"
b0 C"
0B"
1*"
04"
05"
0<"
b1100 ;"
b1100 )
b1100 9"
b1100 :"
b0 K
b0 w
b0 @"
b10 +
b10 &"
b0 H
b0 q
b0 t
b0 2"
1L
b100100 3
b100100 o
b100100 8"
b0 .
b0 ~
b10 ,
b10 $"
b10 %"
b1100 4
b1100 X
b1100 [
b1100 7"
b1000 '
b1000 Y
b1000 1"
b1000 ?"
1!
#5500
0!
#5600
b10000 (
b10000 ="
b10000 >"
b0 ;"
b10000 )
b10000 9"
b10000 :"
b10000 4
b10000 X
b10000 [
b10000 7"
b1100 '
b1100 Y
b1100 1"
b1100 ?"
b1100 &
b1100 n
b1100 E"
b1100 R
b1100 e
b1100 D"
1!
#5750
0!
#5850
b11111111111111111111111110010001 ;
b11111111111111111111111110010001 c
b11111111111111111111111110010001 -"
b11111111111111111111111110010001 <
b11111111111111111111111110010001 d
b11111111111111111111111110010001 ,"
1O
b11 P
b11 P"
b111 y
0:
b11111 a
b1000 `
b11111111111111111111110100101100 6
b11111111111111111111110100101100 b
b11111111111111111111110100101100 /"
b1111110100101100 ."
b1000 ("
b1000 '"
b1000 O"
b100001000010001111110100101100 N
b100001000010001111110100101100 ^
b10100 S
b10100 ]
b10100 _
b100001000111111010010110000 #
b100001000111111010010110000 N"
b10100 (
b10100 ="
b10100 >"
b1000010001111110100101100 M"
b1000010001111110100101100000100 ;"
b10100 )
b10100 9"
b10100 :"
b1100 3
b1100 o
b1100 8"
b100001000010001111110100101100 *
b100001000010001111110100101100 \
b100001000010001111110100101100 0"
b10100 4
b10100 X
b10100 [
b10100 7"
b10000 '
b10000 Y
b10000 1"
b10000 ?"
1!
#6000
0!
